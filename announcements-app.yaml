AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Announcement MicroService

Parameters:
  DynamoDBTableName:
    Type: String
    Default: announcements
  Stage:
    Type: String
    Default: dev
  DomainName:
    Type: String
    Default: announcements-domain
  RedirectURL:
    Type: String
    Default: https://example.com/callback


Resources:
  RestAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: RestAPI for the Announcment MicroService
      StageName:
        Ref: Stage
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: open-api.yaml
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt CognitoUserPool.Arn

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: announcements-user-pool
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      AutoVerifiedAttributes:
        - email
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: user-pool-client
      AllowedOAuthFlowsUserPoolClient: true
      CallbackURLs:
        - !Ref RedirectURL
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - email
        - openid
      SupportedIdentityProviders:
        - COGNITO

  CognitoDomainName:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Ref DomainName
      UserPoolId: !Ref CognitoUserPool

  ReadFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: read-announcements
      Runtime: python3.9
      CodeUri: lambdas/
      Handler: lambda_read.lambda_handler
      Events:
        GET:
          Type: Api
          Properties:
            RestApiId:
              Ref: RestAPI
            Path: /v1/announcements
            Method: GET
            Auth:
              Authorizer: NONE
      Policies:
        DynamoDBReadPolicy:
          TableName:
            Ref: AnnouncementsTable
      Environment:
        Variables:
          TABLE:
            Ref: DynamoDBTableName


  WriteFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: create-announcements
      Runtime: python3.9
      CodeUri: lambdas/
      Handler: lambda_write.lambda_handler
      Events:
        POST:
          Type: Api
          Properties:
            RestApiId:
              Ref: RestAPI
            Path: /v1/announcements
            Method: POST
      Policies:
        DynamoDBCrudPolicy:
          TableName:
            Ref: AnnouncementsTable
      Environment:
        Variables:
          TABLE:
            Ref: DynamoDBTableName

  AnnouncementsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName:
        Ref: DynamoDBTableName
      PrimaryKey:
        Name: uuid
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Outputs:
    ApiURL:
      Description: "API endpoint for ${Stage} environment"
      Value: !Sub "https://${RestAPI}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"
    CognitoSignUpURL:
      Description: "API endpoint for Cognito Sign Up"
      Value: !Sub "https://${DomainName}.auth.${AWS::Region}.amazoncognito.com/signup?client_id=${CognitoUserPoolClient}&response_type=token&scope=email+openid&redirect_uri=${RedirectURL}"
    CognitoLoginUpURL:
      Description: "API endpoint for Cognito Log In"
      Value: !Sub "https://${DomainName}.auth.${AWS::Region}.amazoncognito.com/login?client_id=${CognitoUserPoolClient}&response_type=token&scope=email+openid&redirect_uri=${RedirectURL}"
